#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Validate commit message format
# Expected format: type(scope): description
# Example: feat(auth): add user authentication
# Types: feat, fix, docs, style, refactor, test, chore

commit_regex='^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .{1,50}'

if ! grep -qE "$commit_regex" "$1"; then
    echo "‚ùå Invalid commit message format!"
    echo ""
    echo "Format: type(scope): description"
    echo ""
    echo "Types:"
    echo "  feat:     A new feature"
    echo "  fix:      A bug fix"
    echo "  docs:     Documentation only changes"
    echo "  style:    Changes that do not affect the meaning of the code"
    echo "  refactor: A code change that neither fixes a bug nor adds a feature"
    echo "  test:     Adding missing tests or correcting existing tests"
    echo "  chore:    Changes to the build process or auxiliary tools"
    echo ""
    echo "Examples:"
    echo "  feat(auth): add user authentication"
    echo "  fix(ui): resolve button styling issue"
    echo "  docs: update API documentation"
    echo ""
    exit 1
fi