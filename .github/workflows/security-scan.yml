# 6FB Methodologies Workshop - Security Scanning
# Daily security scans and dependency updates

name: Security Scan

on:
  schedule:
    - cron: "0 2 * * *" # Daily at 2 AM UTC
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "package*.json"
      - "Dockerfile"
      - ".github/workflows/security-scan.yml"

jobs:
  # ==============================================
  # Dependency Security Scan
  # ==============================================
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate --json > npm-audit.json || true
          npm audit --audit-level=moderate

      - name: Upload npm audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-results
          path: npm-audit.json

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --json-file-output=snyk-results.json
        continue-on-error: true

      - name: Upload Snyk results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk-results.sarif

  # ==============================================
  # Container Security Scan
  # ==============================================
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t 6fb-methodologies:security-scan .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "6fb-methodologies:security-scan"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      - name: Run Trivy vulnerability scanner (table format)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "6fb-methodologies:security-scan"
          format: "table"
          output: "trivy-results.txt"
          exit-code: "1"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"

      - name: Upload detailed results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-scan-results
          path: trivy-results.txt

  # ==============================================
  # OWASP Dependency Check
  # ==============================================
  owasp-scan:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: depcheck
        with:
          project: "6FB Methodologies"
          path: "."
          format: "ALL"
          out: "reports"

      - name: Upload OWASP results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: owasp-dependency-check-reports
          path: reports/

  # ==============================================
  # Code Security Analysis
  # ==============================================
  code-security:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: typescript, javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Run Semgrep security scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten

  # ==============================================
  # Secret Scanning
  # ==============================================
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ==============================================
  # Infrastructure Security
  # ==============================================
  infrastructure-scan:
    name: Infrastructure Security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          framework: dockerfile,kubernetes,terraform
          directory: .
          quiet: true
          soft_fail: true

      - name: Run Docker Scout
        uses: docker/scout-action@v1
        if: github.event_name != 'pull_request'
        with:
          command: cves
          image: 6fb-methodologies:security-scan
          only-severities: critical,high
          write-comment: false

  # ==============================================
  # Security Report Summary
  # ==============================================
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs:
      [
        dependency-scan,
        container-scan,
        owasp-scan,
        code-security,
        secret-scan,
        infrastructure-scan,
      ]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate security summary
        run: |
          echo "# 6FB Methodologies Security Scan Summary" > security-summary.md
          echo "Date: $(date)" >> security-summary.md
          echo "" >> security-summary.md

          # Check job statuses
          echo "## Scan Results" >> security-summary.md
          echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-summary.md
          echo "- Container Scan: ${{ needs.container-scan.result }}" >> security-summary.md
          echo "- OWASP Scan: ${{ needs.owasp-scan.result }}" >> security-summary.md
          echo "- Code Security: ${{ needs.code-security.result }}" >> security-summary.md
          echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-summary.md
          echo "- Infrastructure Scan: ${{ needs.infrastructure-scan.result }}" >> security-summary.md

      - name: Create issue on security failures
        if: contains(needs.*.result, 'failure')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Scan Failures Detected',
              body: `Security scans have detected issues that require attention.

              Please review the failed scans and address any critical or high severity issues.

              **Failed Scans:**
              ${{ needs.*.result }}

              **Action Required:**
              1. Review the scan results in the Actions tab
              2. Address any critical or high severity issues
              3. Update dependencies if needed
              4. Re-run security scans to verify fixes

              **Artifacts:**
              - Check the artifacts from the security scan workflow for detailed reports`,
              labels: ['security', 'urgent']
            })

      - name: Notify security team
        if: contains(needs.*.result, 'failure')
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: "#security"
          text: "ðŸš¨ Security scan failures detected in 6FB Methodologies. Please review immediately."
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
