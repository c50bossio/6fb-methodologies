# 6FB Methodologies Workshop - Kubernetes Deployment
# Production-ready deployment configuration with security, monitoring, and scaling

apiVersion: apps/v1
kind: Deployment
metadata:
  name: 6fb-methodologies-app
  namespace: 6fb-methodologies
  labels:
    app: 6fb-methodologies
    component: app
    version: v1
    tier: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: 6fb-methodologies
      component: app
  template:
    metadata:
      labels:
        app: 6fb-methodologies
        component: app
        version: v1
        tier: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/api/metrics"
        prometheus.io/port: "3000"
        # Force pod restart on config changes
        kubectl.kubernetes.io/restartedAt: "2024-01-01T00:00:00Z"
    spec:
      serviceAccountName: 6fb-methodologies-app
      automountServiceAccountToken: true

      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault

      # Init containers for database migrations
      initContainers:
        - name: database-migration
          image: 6fb-methodologies:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              echo "Running database migrations..."
              npm run db:migrate
              echo "Migrations completed"
          env:
            - name: NODE_ENV
              value: "production"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: DATABASE_URL
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: app-cache
              mountPath: /app/.next/cache

      containers:
        - name: app
          image: 6fb-methodologies:latest
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 3000
              protocol: TCP

          # Environment variables
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: NEXT_TELEMETRY_DISABLED
              value: "1"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: REDIS_URL
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: STRIPE_SECRET_KEY
            - name: STRIPE_PUBLISHABLE_KEY
              valueFrom:
                configMapKeyRef:
                  name: 6fb-methodologies-config
                  key: STRIPE_PUBLISHABLE_KEY
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: STRIPE_WEBHOOK_SECRET
            - name: TWILIO_ACCOUNT_SID
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: TWILIO_ACCOUNT_SID
            - name: TWILIO_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: TWILIO_AUTH_TOKEN
            - name: TWILIO_PHONE_NUMBER
              valueFrom:
                configMapKeyRef:
                  name: 6fb-methodologies-config
                  key: TWILIO_PHONE_NUMBER
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: SENDGRID_API_KEY
            - name: FROM_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: 6fb-methodologies-config
                  key: FROM_EMAIL
            - name: WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: 6fb-methodologies-secrets
                  key: WEBHOOK_SECRET
            - name: NEXT_PUBLIC_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: 6fb-methodologies-config
                  key: BASE_URL

          # Health checks
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1

          readinessProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1

          # Startup probe for slow container startup
          startupProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30

          # Resource management
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

          # Security context
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL

          # Volume mounts
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: app-cache
              mountPath: /app/.next/cache
            - name: logs
              mountPath: /app/logs

      # Pod-level configurations
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      restartPolicy: Always

      # Node selection and affinity
      nodeSelector:
        kubernetes.io/os: linux

      affinity:
        # Prefer to spread pods across different nodes
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - 6fb-methodologies
                topologyKey: kubernetes.io/hostname

        # Prefer to run on non-spot instances for stability
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              preference:
                matchExpressions:
                  - key: node.kubernetes.io/instance-type
                    operator: NotIn
                    values:
                      - spot

      # Tolerations for spot instances (if needed)
      tolerations:
        - key: "spot-instance"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

      # Volumes
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
        - name: app-cache
          emptyDir:
            sizeLimit: 500Mi
        - name: logs
          emptyDir:
            sizeLimit: 200Mi

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: 6fb-methodologies-app
  namespace: 6fb-methodologies
  labels:
    app: 6fb-methodologies
    component: app
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/6fb-methodologies-app-role
automountServiceAccountToken: true

---
apiVersion: v1
kind: Service
metadata:
  name: 6fb-methodologies-app-service
  namespace: 6fb-methodologies
  labels:
    app: 6fb-methodologies
    component: app
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/api/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "3000"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/api/metrics"
    prometheus.io/port: "3000"
spec:
  type: ClusterIP
  selector:
    app: 6fb-methodologies
    component: app
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  sessionAffinity: None

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: 6fb-methodologies-app-pdb
  namespace: 6fb-methodologies
  labels:
    app: 6fb-methodologies
    component: app
spec:
  selector:
    matchLabels:
      app: 6fb-methodologies
      component: app
  minAvailable: 2

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: 6fb-methodologies-app-hpa
  namespace: 6fb-methodologies
  labels:
    app: 6fb-methodologies
    component: app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: 6fb-methodologies-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
